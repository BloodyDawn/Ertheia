package dwo.gameserver.handler;

import dwo.gameserver.handler.transformations.*;
import dwo.gameserver.instancemanager.TransformationManager;

public class TransformHandler
{
	private TransformHandler()
	{
		TransformationManager.getInstance().registerHandler(new Akamanah());
		TransformationManager.getInstance().registerHandler(new Anakim());
		TransformationManager.getInstance().registerHandler(new AquaElf());
		TransformationManager.getInstance().registerHandler(new ArcherCaptain());
		TransformationManager.getInstance().registerHandler(new AurabirdFalcon());
		TransformationManager.getInstance().registerHandler(new AurabirdOwl());
		TransformationManager.getInstance().registerHandler(new Benom());
		TransformationManager.getInstance().registerHandler(new Buffalo());
		TransformationManager.getInstance().registerHandler(new DarkElfMercenary());
		TransformationManager.getInstance().registerHandler(new DemonPrince());
		TransformationManager.getInstance().registerHandler(new DivineHealer());
		TransformationManager.getInstance().registerHandler(new DivineKnight());
		TransformationManager.getInstance().registerHandler(new DivineRogue());
		TransformationManager.getInstance().registerHandler(new DivineSummoner());
		TransformationManager.getInstance().registerHandler(new DivineWarrior());
		TransformationManager.getInstance().registerHandler(new DivineWizard());
		TransformationManager.getInstance().registerHandler(new DollBlader());
		TransformationManager.getInstance().registerHandler(new DoomWraith());
		TransformationManager.getInstance().registerHandler(new DragonBomberNormal());
		TransformationManager.getInstance().registerHandler(new DragonBomberStrong());
		TransformationManager.getInstance().registerHandler(new DragonMasterLee());
		TransformationManager.getInstance().registerHandler(new DragonBomberWeak());
		TransformationManager.getInstance().registerHandler(new DwarfGolem());
		TransformationManager.getInstance().registerHandler(new DwarfMercenary());
		TransformationManager.getInstance().registerHandler(new DemonRace());
		TransformationManager.getInstance().registerHandler(new ElfMercenary());
		TransformationManager.getInstance().registerHandler(new FlyingFinalForm());
		TransformationManager.getInstance().registerHandler(new FortressCaptain());
        TransformationManager.getInstance().registerHandler(new FoxArteasFighter());
        TransformationManager.getInstance().registerHandler(new FoxArteasWizard());
		TransformationManager.getInstance().registerHandler(new GameMaster());
		TransformationManager.getInstance().registerHandler(new GolemGuardianNormal());
		TransformationManager.getInstance().registerHandler(new GolemGuardianStrong());
		TransformationManager.getInstance().registerHandler(new Gordon());
		TransformationManager.getInstance().registerHandler(new GrailApostleNormal());
		TransformationManager.getInstance().registerHandler(new GrailApostleStrong());
		TransformationManager.getInstance().registerHandler(new GrailApostleWeak());
		TransformationManager.getInstance().registerHandler(new GrizzlyBear());
		TransformationManager.getInstance().registerHandler(new GuardianStrider());
		TransformationManager.getInstance().registerHandler(new GuardsoftheDawn());
		TransformationManager.getInstance().registerHandler(new HeavyTow());
		TransformationManager.getInstance().registerHandler(new Heretic());
		TransformationManager.getInstance().registerHandler(new HumanMercenary());
		TransformationManager.getInstance().registerHandler(new InfernoDrakeNormal());
		TransformationManager.getInstance().registerHandler(new InfernoDrakeStrong());
		TransformationManager.getInstance().registerHandler(new InfernoDrakeWeak());
		TransformationManager.getInstance().registerHandler(new InquisitorBishop());
		TransformationManager.getInstance().registerHandler(new InquisitorElvenElder());
		TransformationManager.getInstance().registerHandler(new InquisitorShilienElder());
		TransformationManager.getInstance().registerHandler(new JetBike());
		TransformationManager.getInstance().registerHandler(new Kadomas());
		TransformationManager.getInstance().registerHandler(new Kamael());
		TransformationManager.getInstance().registerHandler(new KamaelGuardCaptain());
		TransformationManager.getInstance().registerHandler(new KillBill());
		TransformationManager.getInstance().registerHandler(new Kiyachi());
		TransformationManager.getInstance().registerHandler(new LavaGolem());
		TransformationManager.getInstance().registerHandler(new LightPurpleManedHorse());
		TransformationManager.getInstance().registerHandler(new LilimKnightNormal());
		TransformationManager.getInstance().registerHandler(new LilimKnightStrong());
		TransformationManager.getInstance().registerHandler(new LilimKnightWeak());
		TransformationManager.getInstance().registerHandler(new MyoRace());
		TransformationManager.getInstance().registerHandler(new Native());
		TransformationManager.getInstance().registerHandler(new OlMahum());
		TransformationManager.getInstance().registerHandler(new OnyxBeast());
		TransformationManager.getInstance().registerHandler(new Pig());
		TransformationManager.getInstance().registerHandler(new Pixy());
		TransformationManager.getInstance().registerHandler(new PumpkinGhost());
		TransformationManager.getInstance().registerHandler(new Rabbit());
		TransformationManager.getInstance().registerHandler(new Ranku());
		TransformationManager.getInstance().registerHandler(new SaberToothTiger());
		TransformationManager.getInstance().registerHandler(new ShinyPlatform());
		TransformationManager.getInstance().registerHandler(new SteamBeatle());
		TransformationManager.getInstance().registerHandler(new SujinChild());
		TransformationManager.getInstance().registerHandler(new TawnyManedLion());
		TransformationManager.getInstance().registerHandler(new Teleporter());
		TransformationManager.getInstance().registerHandler(new Teleporter2());
		TransformationManager.getInstance().registerHandler(new Timitran());
		TransformationManager.getInstance().registerHandler(new TreasureHunter());
		TransformationManager.getInstance().registerHandler(new UnicornNormal());
		TransformationManager.getInstance().registerHandler(new UnicornStrong());
		TransformationManager.getInstance().registerHandler(new UnicornWeak());
		TransformationManager.getInstance().registerHandler(new Unicorniun());
		TransformationManager.getInstance().registerHandler(new ValeMaster());
		TransformationManager.getInstance().registerHandler(new VanguardDarkAvenger());
		TransformationManager.getInstance().registerHandler(new VanguardPaladin());
		TransformationManager.getInstance().registerHandler(new VanguardShilienKnight());
		TransformationManager.getInstance().registerHandler(new VanguardTempleKnight());
		TransformationManager.getInstance().registerHandler(new Yeti());
		TransformationManager.getInstance().registerHandler(new Yeti2());
		TransformationManager.getInstance().registerHandler(new Zaken());
		TransformationManager.getInstance().registerHandler(new Zariche());
		TransformationManager.getInstance().registerHandler(new Zombie());
		TransformationManager.getInstance().registerHandler(new Scarecrow());
		TransformationManager.getInstance().registerHandler(new TinGolem());
		TransformationManager.getInstance().registerHandler(new SnowKung());
		TransformationManager.getInstance().registerHandler(new KamaelMercenary());
		TransformationManager.getInstance().registerHandler(new KnightofDawn());
		TransformationManager.getInstance().registerHandler(new LureTow());
		TransformationManager.getInstance().registerHandler(new MagicLeader());
		TransformationManager.getInstance().registerHandler(new OrcMercenary());
		TransformationManager.getInstance().registerHandler(new RoyalGuardCaptain());
		TransformationManager.getInstance().registerHandler(new ScrollBlue());
		TransformationManager.getInstance().registerHandler(new ScrollRed());
		TransformationManager.getInstance().registerHandler(new Tow());
		TransformationManager.getInstance().registerHandler(new TrejuoChild());
		TransformationManager.getInstance().registerHandler(new Treykan());
		TransformationManager.getInstance().registerHandler(new WingTow());
		TransformationManager.getInstance().registerHandler(new EpicQuestChild());
		TransformationManager.getInstance().registerHandler(new EpicQuestFrog());
		TransformationManager.getInstance().registerHandler(new EpicQuestNative());
		TransformationManager.getInstance().registerHandler(new HorseSigel());
		TransformationManager.getInstance().registerHandler(new HorseTyr());
		TransformationManager.getInstance().registerHandler(new HorseRogue());
		TransformationManager.getInstance().registerHandler(new HorseYul());
		TransformationManager.getInstance().registerHandler(new HorseEnchanter());
		TransformationManager.getInstance().registerHandler(new HorseWynn());
		TransformationManager.getInstance().registerHandler(new HorseFeoh());
		TransformationManager.getInstance().registerHandler(new HorseAeore());
		TransformationManager.getInstance().registerHandler(new CucuruTime());
		TransformationManager.getInstance().registerHandler(new WoodHorse());
		TransformationManager.getInstance().registerHandler(new StoneIss());
		TransformationManager.getInstance().registerHandler(new IxionAeore());
		TransformationManager.getInstance().registerHandler(new IxionEnchanter());
		TransformationManager.getInstance().registerHandler(new IxionFeoh());
		TransformationManager.getInstance().registerHandler(new IxionRogue());
		TransformationManager.getInstance().registerHandler(new IxionSigel());
		TransformationManager.getInstance().registerHandler(new IxionTyr());
		TransformationManager.getInstance().registerHandler(new IxionWynn());
		TransformationManager.getInstance().registerHandler(new IxionYul());
		TransformationManager.getInstance().registerHandler(new Naviarope());
		TransformationManager.getInstance().registerHandler(new IssEnchanterRabbit());
		TransformationManager.getInstance().registerHandler(new IssEnchanterPigBall());
		TransformationManager.getInstance().registerHandler(new IssEnchanterPoisonToad());
		TransformationManager.getInstance().registerHandler(new IssEnchanterPumpkinHeadMan());
		TransformationManager.getInstance().registerHandler(new IssEnchanterPixy());
		TransformationManager.getInstance().registerHandler(new VehicleLindvior());
		TransformationManager.getInstance().registerHandler(new GolemSiege());
		TransformationManager.getInstance().registerHandler(new DivineRogueIx());
		TransformationManager.getInstance().registerHandler(new CraftVehicle());
		TransformationManager.getInstance().registerHandler(new Anakim2());
		TransformationManager.getInstance().registerHandler(new AntPrincess());
		TransformationManager.getInstance().registerHandler(new BlackBear());
		TransformationManager.getInstance().registerHandler(new BlackBear2());
		TransformationManager.getInstance().registerHandler(new DivineEnchanter());
		TransformationManager.getInstance().registerHandler(new DivineTanker());
		TransformationManager.getInstance().registerHandler(new DivineWarriorIx());
		TransformationManager.getInstance().registerHandler(new ElpyMaster());
		TransformationManager.getInstance().registerHandler(new GolemGuardian());
		TransformationManager.getInstance().registerHandler(new HalloweenFlyingBroom());
		TransformationManager.getInstance().registerHandler(new IllusionVehicle());
		TransformationManager.getInstance().registerHandler(new ImBruceLee());
		TransformationManager.getInstance().registerHandler(new Lilith());
		TransformationManager.getInstance().registerHandler(new OrbisCurse());
		TransformationManager.getInstance().registerHandler(new Orfen());
		TransformationManager.getInstance().registerHandler(new PetRoseLover());
		TransformationManager.getInstance().registerHandler(new PetRoseLover2());
		TransformationManager.getInstance().registerHandler(new QueenAnt());
		TransformationManager.getInstance().registerHandler(new SpecularForm());
		TransformationManager.getInstance().registerHandler(new SpecularFormAir());
		TransformationManager.getInstance().registerHandler(new TinGolem2());
	}

	public static TransformHandler getInstance()
	{
		return SingletonHolder._instance;
	}

	private static class SingletonHolder
	{
		protected static final TransformHandler _instance = new TransformHandler();
	}
}